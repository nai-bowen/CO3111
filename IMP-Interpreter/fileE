(C (x:= 1; repeat  x:= 1 + x until  x > 4 ) , [])

(C (x:= 1; repeat  x:= x+1; y:= 1  until x > 0) , [])

(C   N := 10;  X := 1;  repeat X := X * 2  until X > N  , [])  

(C   N := 8;  X := 1; log := 0;  repeat (X := X * 2;  log := log + 1)  until X >= N  , [])  

(C  remainder  := dividend ; quotient:= 0; repeat (remainder := remainder - divisor; quotient:= quotient + 1) until remainder <  divisor, [(dividend, 21), (divisor, 2)])

(C  A := 23; B := 5; Q := 0; repeat (A := A - B; Q := Q + 1) until A < B, [])

(C (x:= 1; y:= 1; repeat  repeat y:= y+1 until y > 2  until x > 0) , [])

(C (x:= 1; y:= 1; repeat  (repeat y:= y+1 until y > 2) until x > 0) , [])

(C if x > 0 then repeat y := y + 1 until y >= 10 else z := 2, [ (x, 1) , (y,1) ] )

(C if x > 0 then (repeat y := y + 1 until y >= 10) else z := 2, [ (x, 1) , (y,1) ] )

(C (x:= 1; repeat  (x:= x+1; y:= 1)  until x > 0) , [])
